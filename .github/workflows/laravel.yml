name: InFocus

on:
  push:
    branches: [ "main" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    steps:
    
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: '8.1.5'
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with: 
          node-version: 18
      - uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: ${{ secrets.DB_TEST_DATABASE }}
          mysql user: ${{ secrets.DB_TEST_USERNAME }}
          mysql password: ${{ secrets.DB_TEST_PASSWORD }}
      - name: Copy .env
        run: cp .env.example .env
      - name: Install composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Install node dependencies
        run: npm ci
      - name: Setup Project
        run: |
          php artisan config:clear
          php artisan cache:clear
          php artisan key:generate
          npm run build
      - name: Directory Permissions
        run: chmod 755 -R storage bootstrap/cache
      - name: Run Unit tests
        env:
          APP_ENV: testing
          DB_CONNECTION: mysql
          DB_USERNAME: ${{ secrets.DB_TEST_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_TEST_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_TEST_DATABASE }}
        run: php artisan test
      - name: Deploy to Server
        if: ${{ success() }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script_stop: true
          script: |
            cd apps
            cd laravel-example
            git pull
            npm ci
            npm run prod
            composer i
            php artisan migrate --force
    # - name: Update composer
    #   run: composer update
    # - name: Install Dependencies
    #   run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    # - name: install npm
    #   run: npm install
    # - name: build npm
    #   run: npm run build
    # - name: Generate key
    #   run: php artisan key:generate
    # - name: Storage link
    #   run: php artisan storage:link
   
    # - name: Directory Permissions
    #   run: chmod -R 777 storage bootstrap/cache

      
    # - name: Run database migrations
    #   env:
    #     DB_USERNAME: ${{ secrets.DB_USERNAME }}
    #     DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    #     DB_DATABASE: ${{ secrets.DB_NAME }}
    #     DB_HOST: ${{ secrets.DB_HOST }}
    #   run: php artisan migrate --force

    # - name: Run database seeders
    #   env:
    #     DB_USERNAME: ${{ secrets.DB_USERNAME }}
    #     DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    #     DB_DATABASE: ${{ secrets.DB_NAME }}
    #     DB_HOST: ${{ secrets.DB_HOST }}
    #   run: php artisan db:seed --force
    # - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
    #   env:
    #     DB_CONNECTION: sqlite
    #     DB_DATABASE: database/database.sqlite
    #   run: php artisan test

    # - name: Deploy to Hostinger via FTP
    #   uses: SamKirkland/FTP-Deploy-Action@4.1.0
    #   with:
    #     server: ${{ secrets.FTP_SERVER }}
    #     username: ${{ secrets.FTP_USERNAME }}
    #     password: ${{ secrets.FTP_PASSWORD }}
    #     local-dir: ./
    #     server-dir: /public_html/
       
          
    # - name: Install Composer dependencies on server
    #   run: ssh -o StrictHostKeyChecking=no ${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_SERVER }} "composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader"

    # - name: Build assets on server
    #   run: ssh -o StrictHostKeyChecking=no ${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_SERVER }} "npm install && npm run build"

    # - name: Run generate key on server
    #   run: ssh -o StrictHostKeyChecking=no ${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_SERVER }} "php artisan generate:key"
      
    # - name: Run storage link on server
    #   run: ssh -o StrictHostKeyChecking=no ${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_SERVER }} "php artisan storage:link"

    # - name: Run database migrations on server
    #   run: ssh -o StrictHostKeyChecking=no ${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_SERVER }} "php artisan migrate"

    # - name: Run database seeders on server
    #   run: ssh -o StrictHostKeyChecking=no ${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_SERVER }} "php artisan db:seed"

