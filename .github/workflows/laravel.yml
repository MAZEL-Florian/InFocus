name: InFocus

on:
  push:
    branches: [ "main" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: '8.1.5'

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-ansi --no-interaction --no-scripts --no-progress --optimize-autoloader

      - name: Install NPM dependencies
        run: npm install

      - name: Run tests
        env:
          APP_ENV: testing
        run: php artisan test

  deploy:
    runs-on: ubuntu-latest
    needs: laravel-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Hostinger
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          HOSTINGER_USERNAME: ${{ secrets.SSH_USERNAME }}
          HOSTINGER_SERVER: ${{ secrets.SSH_HOST }}
        run: |
          echo "$SSH_PRIVATE_KEY" > key.pem
          chmod 600 key.pem
          ssh -i key.pem -o StrictHostKeyChecking=no $HOSTINGER_USERNAME@$HOSTINGER_SERVER << 'EOF'
            cd /public_html
            git pull origin main
            composer install --no-dev --optimize-autoloader
            npm install --production
            npm run build
            php artisan migrate --force
            php artisan db:seed --force
            php artisan key:generate
            php artisan cache:clear
            php artisan config:clear
            php artisan route:clear
            php artisan view:clear
          EOF
          rm -f key.pem

    # - name: Update composer
    #   run: composer update
    # - name: Install Dependencies
    #   run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    # - name: install npm
    #   run: npm install
    # - name: build npm
    #   run: npm run build
    # - name: Generate key
    #   run: php artisan key:generate
    # - name: Storage link
    #   run: php artisan storage:link
   
    # - name: Directory Permissions
    #   run: chmod -R 777 storage bootstrap/cache

      
    # - name: Run database migrations
    #   env:
    #     DB_USERNAME: ${{ secrets.DB_USERNAME }}
    #     DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    #     DB_DATABASE: ${{ secrets.DB_NAME }}
    #     DB_HOST: ${{ secrets.DB_HOST }}
    #   run: php artisan migrate --force

    # - name: Run database seeders
    #   env:
    #     DB_USERNAME: ${{ secrets.DB_USERNAME }}
    #     DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    #     DB_DATABASE: ${{ secrets.DB_NAME }}
    #     DB_HOST: ${{ secrets.DB_HOST }}
    #   run: php artisan db:seed --force
    # - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
    #   env:
    #     DB_CONNECTION: sqlite
    #     DB_DATABASE: database/database.sqlite
    #   run: php artisan test

    # - name: Deploy to Hostinger via FTP
    #   uses: SamKirkland/FTP-Deploy-Action@4.1.0
    #   with:
    #     server: ${{ secrets.FTP_SERVER }}
    #     username: ${{ secrets.FTP_USERNAME }}
    #     password: ${{ secrets.FTP_PASSWORD }}
    #     local-dir: ./
    #     server-dir: /public_html/
       
          
    # - name: Install Composer dependencies on server
    #   run: ssh -o StrictHostKeyChecking=no ${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_SERVER }} "composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader"

    # - name: Build assets on server
    #   run: ssh -o StrictHostKeyChecking=no ${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_SERVER }} "npm install && npm run build"

    # - name: Run generate key on server
    #   run: ssh -o StrictHostKeyChecking=no ${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_SERVER }} "php artisan generate:key"
      
    # - name: Run storage link on server
    #   run: ssh -o StrictHostKeyChecking=no ${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_SERVER }} "php artisan storage:link"

    # - name: Run database migrations on server
    #   run: ssh -o StrictHostKeyChecking=no ${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_SERVER }} "php artisan migrate"

    # - name: Run database seeders on server
    #   run: ssh -o StrictHostKeyChecking=no ${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_SERVER }} "php artisan db:seed"

